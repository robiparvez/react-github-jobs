{"version":3,"sources":["hooks/useFetchJobs.js","components/Job.js","components/JobsPagination.js","components/SearchForm.js","App.js","index.js"],"names":["BASE_URL","ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","err","isCancel","cancelToken2","length","cancel","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","children","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","Collapse","in","description","JobsPagination","setPage","adjustPage","amount","previousPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","onParamChange","Form","Row","Group","as","Col","Label","Control","name","onChange","value","xs","Check","full_time","id","label","App","setParams","Container","e","param","target","prevParams","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0620e187.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { useReducer, useEffect } from 'react';\r\n\r\n// const BASE_URL = '/positions.json';\r\n// const BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\r\nconst BASE_URL = 'https://secret-ocean-49799.herokuapp.com/https://jobs.github.com/positions.json';\r\n// const BASE_URL = 'https://corsanywhere.herokuapp.com/https://jobs.github.com/positions.json';\r\n\r\nconst ACTIONS = {\r\n    MAKE_REQUEST: 'make-request',\r\n    GET_DATA: 'get-data',\r\n    ERROR: 'error',\r\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST:\r\n            return { loading: true, jobs: [] };\r\n\r\n        case ACTIONS.GET_DATA:\r\n            return { ...state, loading: false, jobs: action.payload.jobs };\r\n\r\n        case ACTIONS.ERROR:\r\n            return { ...state, loading: false, error: action.payload.error, jobs: [] };\r\n\r\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n            return { ...state, hasNextPage: action.payload.hasNextPage };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst useFetchJobs = (params, page) => {\r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n\r\n        // Fetch jobs\r\n        const cancelToken1 = axios.CancelToken.source();\r\n        axios\r\n            .get(BASE_URL, {\r\n                cancelToken: cancelToken1.token,\r\n                params: { markdown: true, page: page, ...params }\r\n            })\r\n            .then((res) => {\r\n                dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\r\n            })\r\n            .catch((err) => {\r\n                if (axios.isCancel(err)) return;\r\n                dispatch({ type: ACTIONS.ERROR, payload: { error: err } });\r\n            });\r\n\r\n        // Fetch jobs pages length\r\n        const cancelToken2 = axios.CancelToken.source();\r\n        axios\r\n            .get(BASE_URL, {\r\n                cancelToken: cancelToken2.token,\r\n                params: { markdown: true, page: page, ...params }\r\n            })\r\n            .then((res) => {\r\n                dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } });\r\n            })\r\n            .catch((err) => {\r\n                if (axios.isCancel(err)) return;\r\n                dispatch({ type: ACTIONS.ERROR, payload: { error: err } });\r\n            });\r\n\r\n        return () => {\r\n            cancelToken1.cancel();\r\n            cancelToken2.cancel();\r\n        };\r\n    }, [params, page]);\r\n\r\n    return state;\r\n};\r\n\r\nexport default useFetchJobs;\r\n","import { useState } from 'react';\r\nimport { Badge, Button, Card, Collapse } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst Job = ({ job }) => {\r\n    const DEFAULT_COMPANY_LOGO = 'https://images.pexels.com/photos/159888/pexels-photo-159888.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940';\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen((state) => !state);\r\n    };\r\n\r\n    return (\r\n        <Card className='mb-3'>\r\n            <Card.Body>\r\n                <div className='d-flex justify-content-between'>\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title} - <span className='text-muted'>{job.company}</span>\r\n                        </Card.Title>\r\n                        <Card.Subtitle className='text-muted mb-2'>{new Date(job.created_at).toLocaleDateString()}</Card.Subtitle>\r\n                        <Badge variant='secondary mr-2'>{job.type}</Badge>\r\n                        <Badge variant='secondary'>{job.location}</Badge>\r\n                        <div style={{ wordBreak: 'break-all' }}>\r\n                            <ReactMarkdown children={job.how_to_apply} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <img className='d-none d-md-block' height='50' alt='company-logo' src={job.company_logo ?? DEFAULT_COMPANY_LOGO} />\r\n                </div>\r\n\r\n                <Card.Text>\r\n                    <Button onClick={handleOpen} variant='primary'>\r\n                        {!open ? 'View Details' : 'Hide Details'}\r\n                    </Button>\r\n                </Card.Text>\r\n\r\n                <Collapse in={open}>\r\n                    <div className='mt-4'>\r\n                        <ReactMarkdown children={job.description} />\r\n                    </div>\r\n                </Collapse>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Job;\r\n","import { Pagination } from 'react-bootstrap';\r\n\r\nconst JobsPagination = ({ page, setPage, hasNextPage }) => {\r\n    const adjustPage = (amount) => {\r\n        setPage((previousPage) => previousPage + amount);\r\n    };\r\n\r\n    return (\r\n        <Pagination>\r\n            {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n\r\n            {/* Go to page 1 all the time */}\r\n            {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\r\n\r\n            {/* Show pagination ellipsis if page is greater than 2 */}\r\n            {page > 2 && <Pagination.Ellipsis />}\r\n\r\n            {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\r\n\r\n            <Pagination.Item active>{page}</Pagination.Item>\r\n\r\n            {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\r\n\r\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default JobsPagination;\r\n","import { Col, Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = ({ params, onParamChange }) => {\r\n    return (\r\n        <Form className='mb-4'>\r\n            <Form.Row className='align-items-end'>\r\n                {/* Description */}\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type='text' name='description' onChange={onParamChange} value={params.description} />\r\n                </Form.Group>\r\n                {/* Location */}\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control type='text' name='location' onChange={onParamChange} value={params.location} />\r\n                </Form.Group>\r\n\r\n                {/* Full-time */}\r\n                <Form.Group as={Col} xs='auto'>\r\n                    <Form.Check\r\n                    onChange={onParamChange}\r\n                    value={params.full_time}\r\n                    name='full_time'\r\n                    id='full-time'\r\n                    label='Only Full Time'\r\n                    type='switch'\r\n                    className='mb-2'\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchForm;\r\n","import { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport useFetchJobs from './hooks/useFetchJobs';\nimport Job from './components/Job';\nimport JobsPagination from './components/JobsPagination';\nimport SearchForm from './components/SearchForm';\n\nfunction App() {\n    const title = 'GITHUB JOBS';\n    const [params, setParams] = useState({});\n    const [page, setPage] = useState(1);\n    const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n    const handleParamsChange = (e) => {\n        const param = e.target.name;\n        const value = e.target.value;\n        setPage(1);\n        setParams((prevParams) => ({ ...prevParams, [param]: value }));\n    };\n\n    return (\n        <Container className='my-4'>\n            <h1 className='mb-4'>{title}</h1>\n\n            {/* Search form */}\n            <SearchForm params={params} onParamChange={handleParamsChange} />\n\n            {/* Pagination - Top */}\n            <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n\n            {loading && <h1>Loading...</h1>}\n\n            {error && <h1>Try refreshing...</h1>}\n            {jobs.map((job) => {\n                return <Job key={job.id} job={job} />;\n            })}\n\n            {/* Pagination - Bottom */}\n            <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <>\n        <App />\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}